<?php
// $Id: xmlrpc_server.module,v 1.6.2.14.2.5 2010/02/21 03:01:19 heyrocker Exp $
/**
 * @file
 *  Enable XML-RPC for services module.
 */

/**
 * Implementation of hook_server_info().
 */
function xmlrpc_server_server_info() {
  return array(
    'name' => 'XMLRPC',
  );
}

/**
 * Implementation of hook_server().
 */
function xmlrpc_server_server() {
  require_once './includes/xmlrpc.inc';
  require_once './includes/xmlrpcs.inc';

  // 
  return xmlrpc_server(xmlrpc_server_xmlrpc());
}

/**
 * Return an array of all defined services methods and callbacks.
 *
 * @see xmlrpc_server()
 */
function xmlrpc_server_xmlrpc() {
  $callbacks = array();
  
  $resources = services_get_resources();
  if (!empty($resources)) {
    module_load_include('inc', 'services', 'services.resource-translation');

    // Translate all resources
    foreach ($resources as $name => $def) {
      foreach (_services_resource_as_services($def) as $method) {
        $callbacks[$method['method']] = 'xmlrpc_server_call_wrapper';
        $methods[] = $method;
      }
    }
  }

  return $callbacks;
}

/**
 * Pass XMLRPC server requests to the appropriate services method.
 *
 * This function can take varying parameters as are appropriate to
 * the service in question. 
 */
function xmlrpc_server_call_wrapper() {
  $xmlrpc_server = xmlrpc_server_get();
  $method_name = $xmlrpc_server->message->methodname;
  $args = func_get_args();
  $endpoint = services_get_server_info('endpoint', '');
  $controller = services_controller_get($method_name, $endpoint);

  try {
    return services_controller_execute($controller, $args);  
  } 
  catch (Exception $e) {
    $code = $e->getCode();
    switch($code) {
      case 401:
        drupal_set_header('HTTP/1.0 401 Unauthorized: ' . $e->getMessage());
      break;
      case 404:
        drupal_set_header('HTTP/1.0 404 Not found: ' . $e->getMessage());
      break;
      case 406:
        drupal_set_header('HTTP/1.0 406 Not Acceptable: ' . $e->getMessage());
      break;
      default:
        if ($code >= 400 && $code < 600) {
          drupal_set_header('HTTP/1.0 ' . $code . ' ' . $e->getMessage());
        }
        else {
          drupal_set_header('HTTP/1.0 500 An error occurred: (' . $code . ') ' . $e->getMessage());
        }
      break;
    }
  }
}
