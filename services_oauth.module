<?php
// $Id$

/**
 * Implementation of hook_services_authentication().
 */
function services_oauth_authentication_info() {
  return array(
    '#file' => 'services_oauth.inc',
    '#title' => t('OAuth authentication'),
    '#description' => t('An open protocol to allow secure API authorization'),
    '#context_aware' => TRUE,
    'security_settings' => '_services_oauth_security_settings',
    'security_settings_submit' => '_services_oauth_security_settings_submit',
    'alter_methods' => '_services_oauth_alter_methods',
    'authenticate_call' => '_services_oauth_authenticate_call',
  );
}

function services_oauth_services_resource_operation_settings_alter(&$settings, $context, $resource, $class, $name=NULL) {
  require_once('services_oauth.admin.inc');
  if ($context['authentication'] == 'services_oauth') {
    if ($rop = get_resource_operation_info($resource, $class, $name)) {
      $auth_levels = array();
      foreach (oauth_common_authorization_levels($context) as $name => $level) {
        $auth_levels[$name] = t($level->title);
      }
      _services_oauth_admin_authentication_options(&$settings, $rop, $auth_levels);
    }
  }

}

/**
 * Implementation of hook_menu().
 */
function services_oauth_menu() {
  $menu = array();

  $menu['admin/build/services/%/authentication'] = array(
    'title' => 'Authentication',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_services_oauth_admin_authentication', 3),
    'access arguments' => array('administer services'),
    'file' => 'services_oauth.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $menu;
}